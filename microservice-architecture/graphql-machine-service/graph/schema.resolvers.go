package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.48

import (
	"context"

	"github.com/PhilippWegner/hsbo-ma-inf-wegner-philipp/microservice-architecture/graphql-machine-service/database"
	"github.com/PhilippWegner/hsbo-ma-inf-wegner-philipp/microservice-architecture/graphql-machine-service/graph/model"
)

var influxdb = database.ConnectInfluxdb()

// CreateStates is the resolver for the createStates field.
func (r *mutationResolver) CreateStates(ctx context.Context, input []*model.CreateStatesInput) ([]*model.State, error) {
	return influxdb.CreateStates(input)
}

// Plcs is the resolver for the plcs field.
func (r *queryResolver) Plcs(ctx context.Context, machine string, time string, limit int, filter *model.IdentifierFilterInput) ([]*model.Plc, error) {
	return influxdb.GetPlcs(machine, time, limit, filter)
}

// States is the resolver for the states field.
func (r *queryResolver) States(ctx context.Context, machine string, limit int) ([]*model.State, error) {
	return influxdb.GetStates(machine, limit)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
